<?xml version="1.0" encoding="UTF-8"?>
<bm:model xmlns:bm="http://www.aurora-framework.org/schema/bm">
    <bm:operations>
        <bm:operation name="query">
            <bm:query-sql><![CDATA[
                SELECT
                    *
                FROM
                    (SELECT
                        s.exp_report_header_id,
                        (SELECT
                            cch.contract_header_id
                        FROM
                            con_contract_headers cch,
                            con_document_flows cdf
                        WHERE
                            cch.contract_header_id   = cdf.document_id AND
                            cdf.document_type        = 'CON_CONTRACT_HEADERS' AND
                            cdf.source_document_type = 'EXP_REPORT_HEADERS' AND
                            cdf.source_document_id   = s.exp_report_header_id
                        ) contract_header_id,
                        (SELECT
                            cch.contract_number
                        FROM
                            con_contract_headers cch,
                            con_document_flows cdf
                        WHERE
                            cch.contract_header_id   = cdf.document_id AND
                            cdf.document_type        = 'CON_CONTRACT_HEADERS' AND
                            cdf.source_document_type = 'EXP_REPORT_HEADERS' AND
                            cdf.source_document_id   = s.exp_report_header_id
                        ) contact_number,
                        s.exp_report_number exp_requisition_number,
                        s.employee_id,
                        s.audit_flag,
                        TO_CHAR(s.audit_date, 'yyyy-mm-dd') audit_date,
                        (SELECT
                            employee_code
                        FROM
                            exp_employees es
                        WHERE
                            es.employee_id = s.employee_id
                        ) employee_code,
                        (SELECT name FROM exp_employees es WHERE es.employee_id = s.employee_id
                        ) employee_name,
                        s.payee_category,
                        (SELECT
                            code_value_name
                        FROM
                            sys_code_values_vl b,
                            sys_codes a
                        WHERE
                            b.code_id  = a.code_id AND
                            a.code     = 'PAYMENT_OBJECT' AND
                            code_value = s.payee_category
                        ) payee_category_name,
                        s.payee_id,
                        DECODE(s.payee_category, 'EMPLOYEE',
                        (SELECT
                            employee_code
                            || '-'
                            || name
                        FROM
                            exp_employees ee
                        WHERE
                            ee.employee_id = s.payee_id
                        ), 'CUSTOMER',
                        (SELECT
                            vc.customer_code
                            || '-'
                            || vc.description
                        FROM
                            ord_system_customers_vl vc
                        WHERE
                            vc.customer_id = s.payee_id
                        ),
                        (SELECT
                            vv.vender_code
                            || '-'
                            || vv.description
                        FROM
                            pur_system_venders_vl vv
                        WHERE
                            vv.vender_id = s.payee_id
                        )) payee_name,
                        s.currency_code,
                        (SELECT
                            currency_name
                        FROM
                            gld_currency_vl gcv
                        WHERE
                            gcv.currency_code = s.currency_code
                        ) currency_name,
                        s.exchange_rate_type,
                        s.exchange_rate_quotation,
                        (SELECT
                            SUM(t.report_amount)
                        FROM
                            exp_report_lines t
                        WHERE
                            t.exp_report_header_id = s.exp_report_header_id
                        ) quarter_num,
                        (SELECT
                            SUM(t.report_functional_amount)
                        FROM
                            exp_report_lines t
                        WHERE
                            t.exp_report_header_id = s.exp_report_header_id
                        ) quarter_num_fun,
                        s.period_name,
                        s.je_creation_status,
                        s.gld_interface_flag,
                        s.created_by,
                        s.creation_date,
                        s.last_updated_by,
                        s.last_update_date,
                        TO_CHAR(s.report_date, 'YYYY-MM-DD') requesition_date,
                        s.exp_report_type_id exp_requisition_type_id,
                        (SELECT
                            erpv.description
                        FROM
                            exp_expense_report_types_vl erpv
                        WHERE
                            erpv.expense_report_type_id = s.exp_report_type_id
                        ) type_description,
                        (SELECT
                            erpv.expense_requisition_type_code
                        FROM
                            exp_expense_req_types_vl erpv
                        WHERE
                            erpv.expense_requisition_type_id = s.exp_report_type_id
                        ) type_code,
                        s.description,
                        NVL(s.reversed_flag, 'N') reversed_flag,
                        (SELECT
                            b.code_value_name
                        FROM
                            sys_codes_vl a,
                            sys_code_values_vl b
                        WHERE
                            a.code_id    = b.code_id AND
                            a.code       = 'CSH_REVERSE_SELECT' AND
                            b.code_value = NVL(s.reversed_flag, 'N')
                        ) reversed_flag_name,
                        DECODE(s.reversed_flag, 'W',
                        (SELECT
                            h.exp_report_number
                        FROM
                            exp_report_headers h
                        WHERE
                            h.source_exp_rep_header_id = s.exp_report_header_id
                        ), '') reverse_number,
                        DECODE(s.reversed_flag, 'R',
                        (SELECT
                            h.exp_report_number
                        FROM
                            exp_report_headers h
                        WHERE
                            h.exp_report_header_id = s.source_exp_rep_header_id
                        ), '') reversed_number,
                        s.report_status requisition_status_value,
                        (SELECT
                            b.code_value_name
                        FROM
                            sys_codes_vl a,
                            sys_code_values_vl b
                        WHERE
                            a.code_id    = b.code_id AND
                            a.code       = 'EXP_EXPENSE_REPORT_STATUS' AND
                            b.code_value = s.report_status
                        ) requisition_status,
                        sum_am.paymented_samount
                    FROM
                        exp_report_headers s,
                        (SELECT
                            SUM(cw.document_write_off_amount) paymented_samount,
                            eh.exp_report_header_id
                        FROM
                            csh_write_off cw,
                            exp_report_headers eh
                        WHERE
                            cw.document_source    = 'EXPENSE_REPORT' AND
                            cw.document_header_id = eh.exp_report_header_id
                        GROUP BY
                            eh.exp_report_header_id
                        ) sum_am
                    WHERE
                        s.exp_report_header_id                                                                             = sum_am.exp_report_header_id(+) AND
                        sys_user_secure_exit_pkg.exp_report_account_query(s.exp_report_header_id, ${/session/@session_id}) = 'Y' AND
                        s.company_id                                                                                      IN
                        (SELECT
                            fc.company_id
                        FROM
                            fnd_companies fc START
                        WITH fc.parent_company_id = ${/session/@company_id} CONNECT BY fc.parent_company_id = prior fc.company_id
                        UNION
                        SELECT to_number(${/session/@company_id}) AS company_id FROM dual
                        )
                    ) v #WHERE_CLAUSE#
                ORDER BY
                    exp_report_header_id DESC
            ]]></bm:query-sql>
        </bm:operation>
    </bm:operations>
    <bm:query-fields>
        <bm:query-field name="payee_category" datatype="java.lang.String" queryExpression="payee_category = ${@payee_category}"/>
        <bm:query-field name="payee_id" datatype="java.lang.String" queryExpression="payee_id like ${@payee_id}"/>
        <bm:query-field name="requisition_status" datatype="java.lang.String" queryExpression="requisition_status_value = ${@requisition_status}"/>
        <bm:query-field name="currency_code" datatype="java.lang.String" queryExpression="CURRENCY_CODE like ${@currency_code}"/>
        <bm:query-field name="requesition_date_from" datatype="java.lang.String" queryExpression="requesition_date &gt;= ${@requesition_date_from}"/>
        <bm:query-field name="requesition_date_to" datatype="java.lang.String" queryExpression="requesition_date &lt;= ${@requesition_date_to}"/>
        <bm:query-field name="employee_id" datatype="java.lang.Long" queryExpression="employee_id  = ${@employee_id}"/>
        <bm:query-field name="report_number" datatype="java.lang.String" queryExpression="exp_requisition_number  = ${@report_number}"/>
        <bm:query-field name="type_item" datatype="java.lang.Long" queryExpression="exp_requisition_type_id  = ${@type_item}"/>
        <bm:query-field name="contact_number" datatype="java.lang.String" queryExpression="contact_number  = ${@contact_number}"/>
        <bm:query-field name="audit_date" datatype="java.lang.String" queryExpression="audit_date  = ${@audit_date}"/>
        <bm:query-field name="reversed_flag" datatype="java.lang.String" queryExpression="reversed_flag  = ${@reversed_flag}"/>
        <bm:query-field name="requisition_amount_from" datatype="java.lang.Double" queryExpression="quarter_num &gt;= ${@requisition_amount_from}"/>
        <bm:query-field name="requisition_amount_to" datatype="java.lang.Double" queryExpression="quarter_num &lt;= ${@requisition_amount_to}"/>
        <bm:query-field name="p_audit_flag" datatype="java.lang.String" queryExpression="(audit_flag = ${@p_audit_flag} OR (NULLIF(${@p_audit_flag},&apos;N&apos;) is null) or (${@p_audit_flag} is null))"/>
        <bm:query-field name="invoice_category_name" dataType="java.lang.String" queryExpression="exists(select 1 from exp_report_lines l where l.exp_report_header_id =v.exp_report_header_id  and l.invoice_category = ${@invoice_category})"/>
        <bm:query-field name="invoice_code" dataType="java.lang.String" queryExpression="exists(select 1 from exp_report_lines l,vat_invoice_relation t where t.document_line_id = l.exp_report_line_id and l.exp_report_header_id =v.exp_report_header_id and t.invoice_code like ${@invoice_code} and t.document_type =&apos;EXP_REPORT&apos;)"/>
        <bm:query-field name="invoice_number" dataType="java.lang.String" queryExpression="exists(select 1 from exp_report_lines l,vat_invoice_relation t where t.document_line_id = l.exp_report_line_id and l.exp_report_header_id =v.exp_report_header_id and t.invoice_number like ${@invoice_number} and t.document_type =&apos;EXP_REPORT&apos;)"/>
        <bm:query-field name="invoice_usedes_desc" dataType="java.lang.String" queryExpression="exists(select 1 from exp_report_lines l,vat_invoice_relation t where t.document_line_id = l.exp_report_line_id and l.exp_report_header_id =v.exp_report_header_id and t.invoice_usedes_id like ${@invoice_usedes_id} and t.document_type =&apos;EXP_REPORT&apos;)"/>
        <bm:query-field name="invoice_status_desc" dataType="java.lang.String" queryExpression="exists(select 1 from exp_report_lines l,vat_invoice_relation t where t.document_line_id = l.exp_report_line_id and l.exp_report_header_id =v.exp_report_header_id and t.invoice_status = ${@invoice_status} and t.document_type =&apos;EXP_REPORT&apos;)"/>
        <bm:query-field name="authenticating_status_desc" dataType="java.lang.String" queryExpression="exists(select 1 from exp_report_lines l,vat_invoice_relation t where t.document_line_id = l.exp_report_line_id and l.exp_report_header_id =v.exp_report_header_id and t.authenticating_status = ${@authenticating_status} and t.document_type =&apos;EXP_REPORT&apos;)"/>
        <bm:query-field name="authenticating_date_from" dataType="java.lang.String" queryExpression="exists(select 1 from exp_report_lines l, vat_invoice_relation t where t.document_line_id = l.exp_report_line_id and l.exp_report_header_id =v.exp_report_header_id and t.authenticating_date &gt;= to_date(${@authenticating_date_from},&apos;YYYY-MM-DD&apos;) and t.document_type =&apos;EXP_REPORT&apos;)"/>
        <bm:query-field name="authenticating_date_to" dataType="java.lang.String" queryExpression="exists(select 1 from exp_report_lines l,vat_invoice_relation t where t.document_line_id = l.exp_report_line_id and l.exp_report_header_id =v.exp_report_header_id and t.authenticating_date &lt;= to_date(${@authenticating_date_to},&apos;YYYY-MM-DD&apos;) and t.document_type =&apos;EXP_REPORT&apos;)"/>
    </bm:query-fields>
</bm:model>
